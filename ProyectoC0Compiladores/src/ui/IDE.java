/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import java_cup.runtime.Symbol;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import steps.Lexer;
import java.util.logging.Level;
import java.util.logging.Logger;
import java_cup.runtime.ComplexSymbolFactory;
import java_cup.runtime.ScannerBuffer;
import java_cup.runtime.SymbolFactory;
import steps.Parser;
import structures.Token;

/**
 *
 * @author julio
 */
public class IDE extends javax.swing.JFrame {

    private static JFileChooser fileChooser;
    public static boolean error = false;
    public static String errMessage = "";
    
    /**
     * Creates new form IDE
     */
    public IDE() {
        initComponents();
        //this.getContentPane().setBackground(new Color(19,16,16));      
        //this.projectLabel.setBackground(new Color(51,51,51));
        //this.Tabs.setBackground(new Color(153,153,153));
        //this.editorPane.setBackground(Color.red);
        
        fileChooser = new JFileChooser();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        projectLabel = new javax.swing.JPanel();
        Tabs = new javax.swing.JTabbedPane();
        messageTab = new javax.swing.JLabel();
        tokenTab = new javax.swing.JScrollPane();
        tokenLabel = new javax.swing.JLabel();
        scrollPane = new javax.swing.JScrollPane();
        editorPane = new javax.swing.JEditorPane();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openButton = new javax.swing.JMenuItem();
        saveButton = new javax.swing.JMenuItem();
        runMenu = new javax.swing.JMenu();
        runButton = new javax.swing.JMenuItem();
        compileButton = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("C - 0");
        setBackground(new java.awt.Color(19, 16, 16));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        setForeground(new java.awt.Color(51, 51, 51));

        projectLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        projectLabel.setForeground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout projectLabelLayout = new javax.swing.GroupLayout(projectLabel);
        projectLabel.setLayout(projectLabelLayout);
        projectLabelLayout.setHorizontalGroup(
            projectLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 156, Short.MAX_VALUE)
        );
        projectLabelLayout.setVerticalGroup(
            projectLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
        );

        Tabs.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        messageTab.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        Tabs.addTab("Message", messageTab);

        tokenTab.setViewportView(tokenLabel);

        Tabs.addTab("Tokens", tokenTab);

        editorPane.setBackground(new java.awt.Color(255, 255, 255));
        editorPane.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        scrollPane.setViewportView(editorPane);

        menuBar.setBackground(new java.awt.Color(51, 51, 51));
        menuBar.setForeground(new java.awt.Color(51, 51, 51));
        menuBar.setToolTipText("");
        menuBar.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        fileMenu.setText("File");

        openButton.setText("Open");
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });
        fileMenu.add(openButton);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        fileMenu.add(saveButton);

        menuBar.add(fileMenu);

        runMenu.setText("Run");

        runButton.setText("Run ");
        runMenu.add(runButton);

        compileButton.setText("Compile");
        compileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compileButtonActionPerformed(evt);
            }
        });
        runMenu.add(compileButton);

        menuBar.add(runMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(projectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Tabs)
                    .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1134, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(projectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scrollPane)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        fileChooser.setDialogTitle("Open File");
        fileChooser.setFileFilter(new FileNameExtensionFilter("TXT files","txt"));
        int returnValue = fileChooser.showOpenDialog(this);
        
        if (returnValue == JFileChooser.APPROVE_OPTION){
            try{
                Reader reader = new BufferedReader(new FileReader(fileChooser.getSelectedFile()));
                messageTab.setText("File successfully loaded");
                editorPane.read(reader, evt);               
            }catch (IOException ioe) {
                messageTab.setText("Failed to load file");
            }
        }
        else {
            messageTab.setText("No file choosen");
        }
    }//GEN-LAST:event_openButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        fileChooser.setDialogTitle("Save File");
        fileChooser.setFileFilter(new FileNameExtensionFilter("TXT files","txt"));
        int result = fileChooser.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            String content = editorPane.getText();
            File file = fileChooser.getSelectedFile();
            try {
                FileWriter fw = new FileWriter(file.getPath());
                fw.write(content);
                fw.flush();
                fw.close();
            } catch (IOException e) {
                messageTab.setText("Failed to save file");
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void compileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compileButtonActionPerformed
        String tokenList = "";
        tokenLabel.setText("");
        messageTab.setText("");
        try{
            String content = editorPane.getText();             
            Lexer lexer = new Lexer(new StringReader(content));
            Parser p = new Parser(lexer);
            p.parse();
            //System.out.println(buffer.getBuffered());
            for(Token token : lexer.getTokenList()){
                tokenList += token.toString();
                tokenList += "\n";
            }
            //tokenList += buffer.getBuffered().stream().map((symbol) -> (symbol.toString()+"\n")).reduce(tokenList, String::concat);  
        } catch (Exception ex) {
            Logger.getLogger(IDE.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            if(!error){
                messageTab.setText("File successfully compiled");
            }else{
                messageTab.setText("Failed to compile file. \n"+ errMessage);
            }
            tokenLabel.setText(tokenList);
        }
    }//GEN-LAST:event_compileButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                IDE screen = new IDE();
                screen.setVisible(true);
                
                }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Tabs;
    private javax.swing.JMenuItem compileButton;
    private javax.swing.JEditorPane editorPane;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JLabel messageTab;
    private javax.swing.JMenuItem openButton;
    private javax.swing.JPanel projectLabel;
    private javax.swing.JMenuItem runButton;
    private javax.swing.JMenu runMenu;
    private javax.swing.JMenuItem saveButton;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JLabel tokenLabel;
    private javax.swing.JScrollPane tokenTab;
    // End of variables declaration//GEN-END:variables
}
